@model TheTallTankardTavern.Models.CharacterModel
@using TheTallTankardTavern.Helpers
@addTagHelper *, TheTallTankardTavern

<div id="character-other-stats">
    <div id="hit-points-card" class="card stat-card other-stat-card-three-column">
        <div class="card-body">
            <div class="row">
                <div class="col-md-5"><div class="stat-card-label">HIT POINTS</div></div>
                <div class="col-md-2"><div class="stat-card-content"><numberbox asp-for="Hit_Points_Remaining" min="0" max="@Model.MaxHitPoints" onchange="quickSaveHitPoints('@Model.ID', this)"></numberbox></div></div>
                <div class="col-md-2"><div class="stat-card-label">/ @Model.MaxHitPoints</div></div>
                <div class="col-md-3"></div>
            </div>
        </div>
    </div>
    <div id="hit-die-card" class="card stat-card other-stat-card-three-column">
        <div class="card-body">
            <div class="row">
                <div class="col-md-5"><div class="stat-card-label">HIT DICE</div></div>
                <div class="col-md-2"><div class="stat-card-content"><numberbox asp-for="Hit_Dice_Remaining" min="0" max="@Model.Level" onchange="quickSaveHitDice('@Model.ID', this)"></numberbox></div></div>
                <div class="col-md-2"><div class="stat-card-label">/ @Model.TotalHitDice</div></div>
                <div class="col-md-3"></div>
            </div>
        </div>
    </div>
    <div id="temporary-hit-points-card" class="card stat-card other-stat-card-three-column">
        <div class="card-body">
            <div class="row">
                <div class="col-md-5"><div class="stat-card-label">TEMP HP</div></div>
                <div class="col-md-2"><div class="stat-card-content"><numberbox asp-for="Temp_Hit_Points" min="0" onchange="quickSaveTempHitPoints('@Model.ID', this)"></numberbox></div></div>
                <div class="col-md-2"></div>
                <div class="col-md-3"></div>
            </div>
        </div>
    </div>
    @if (Model.Class.ToLower().Contains("monk") && @Model.Level > 1)
    {
        <div id="ki-points-card" class="card stat-card other-stat-card-three-column">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5"><div class="stat-card-label">KI POINTS</div></div>
                    <div class="col-md-2"><div class="stat-card-content"><numberbox asp-for="Ki_Points" min="0" max="@Model.Level" onchange="quickSaveKiPoints('@Model.ID', this)"></numberbox></div></div>
                    <div class="col-md-1"><div class="stat-card-label">/ @Model.Level</div></div>
                    <div class="col-md-4"><buttonlink class="action-btn" style="margin:0px" asp-action="RestorePoints" asp-route-id="@Model.ID" text="RESTORE"></buttonlink></div>
                </div>
            </div>
        </div>
    }
    @if (Model.Class.ToLower().Contains("sorcerer") && @Model.Level > 1)
    {
        <div id="sorcery-points-card" class="card stat-card other-stat-card-three-column">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5"><div class="stat-card-label">SORCERY POINTS</div></div>
                    <div class="col-md-2"><div class="stat-card-content"><numberbox asp-for="Sorcery_Points" min="0" max="@Model.Level" onchange="quickSaveSorceryPoints('@Model.ID', this)"></numberbox></div></div>
                    <div class="col-md-1"><div class="stat-card-label">/ @Model.Level</div></div>
                    <div class="col-md-4"></div>
                </div>
            </div>
        </div>
    }
    @if (Model.Class.ToLower().Contains("druid") && @Model.Level > 1)
    {
        <div id="wild-shapes-card" class="card stat-card other-stat-card-three-column">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-5"><div class="stat-card-label">WILD SHAPES</div></div>
                    @if (Model.Level < 20)
                    {
                        <div class="col-md-2"><div class="stat-card-content"><numberbox asp-for="Wild_Shapes" min="0" max="2" onchange="quickSaveWildShapes('@Model.ID', this)"></numberbox></div></div>
                        <div class="col-md-1"><div class="stat-card-label">/ 2</div></div>
                        <div class="col-md-4"><buttonlink class="action-btn" style="margin:0px" asp-action="RestorePoints" asp-route-id="@Model.ID" text="RESTORE"></buttonlink></div>
                    }
                    else
                    {
                        <div class="col-md-2"><div class="stat-card-label">&infin;</div></div>
                        <div class="col-md-5"></div>
                    }
                </div>
            </div>
        </div>
    }
<div id="single-line-cards">
    @if (Model.Class.ToLower().Contains("rogue") && @Model.Level > 1)
    {
        <div id="sneak-attack-damage-card" class="card stat-card other-stat-card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3"><div class="stat-card-content">+@((int)((Model.Level + 1) / 2))D6</div></div>
                    <div class="col-md-9"><div class="stat-card-content">SNEAK ATTACK DAMAGE</div></div>
                </div>
            </div>
        </div>
    }
    @if (Model.Class.ToLower().Contains("warlock") && @Model.Level > 1)
    {
        <div id="eldritch-invocations-card" class="card stat-card other-stat-card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3"><div class="stat-card-content">@Model.GetEldritchInvocations()</div></div>
                    <div class="col-md-9"><div class="stat-card-content">ELDRITCH INVOCATIONS</div></div>
                </div>
            </div>
        </div>
    }
    <div id="spell-attack-mod-card" class="card stat-card other-stat-card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3"><div class="stat-card-content">+@Model.GetSpellCasterAttackModifier()</div></div>
                <div class="col-md-9"><div class="stat-card-content">SPELL ATTACK MODIFIER</div></div>
            </div>
        </div>
    </div>
    <div id="spell-save-dc-card" class="card stat-card other-stat-card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3"><div class="stat-card-content">+@Model.GetSpellCasterSaveDC()</div></div>
                <div class="col-md-9"><div class="stat-card-content">SPELL SAVE DC</div></div>
            </div>
        </div>
    </div>
    <div id="proficiency-bonus-card" class="card stat-card other-stat-card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3"><div class="stat-card-content">+@Model.Proficiency_Bonus</div></div>
                <div class="col-md-9"><div class="stat-card-content">PROFICIENCY BONUS</div></div>
            </div>
        </div>
    </div>
    <div id="initiative-bonus-card" class="card stat-card other-stat-card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3"><div class="stat-card-content">@Model.Initiative.AddSign()</div></div>
                <div class="col-md-9"><div class="stat-card-content">INITIATIVE BONUS</div></div>
            </div>
        </div>
    </div>
    <div id="passive-perception-card" class="card stat-card other-stat-card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3"><div class="stat-card-content">@Model.Passive_Perception</div></div>
                <div class="col-md-9"><div class="stat-card-content">PASSIVE PERCEPTION</div></div>
            </div>
        </div>
    </div>
</div>
    <div class="grouped-stats row">
        <div id="speed-card" class="card stat-card other-stat-card col-md-6">
            <div class="card-body">
                <div class="stat-card-label-header">SPEED</div>
                <div class="stat-card-content">
                    @Model.Speed
                    <strong style="color:red">
                        @if (Model.IsEncumbered())
                        {<span> / 2</span>}
                        @if (Model.IsArmourTooHeavy(Model.Equipment.Armour))
                        {<span> - 10ft</span>}
                    </strong>
                </div>
            </div>
        </div>
        <div id="armour-class-card" class="card stat-card other-stat-card col-md-6">
            <div class="card-body">
                <div class="stat-card-label-header">ARMOUR CLASS</div>
                <div class="stat-card-content">
                    @Model.TotalAC (Base @Model.BaseAC)
                </div>
            </div>
        </div>
    </div>
</div>
