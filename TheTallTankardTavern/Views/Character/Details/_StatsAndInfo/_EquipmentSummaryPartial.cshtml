@model TheTallTankardTavern.Models.CharacterModel
@using System.Text;
@using TTT.Items
@addTagHelper *, TheTallTankardTavern

@{
    EquipmentModel Equipment = Model.Equipment;
    StringBuilder sb = new StringBuilder();
    if (Equipment.Armour != null) { sb.AppendLine($"{Equipment.Armour.Name} ({Equipment.Armour.TypeAsString})"); }
    if (Equipment.Shield != null) { sb.AppendLine($"{Equipment.Shield.Name} (+{Equipment.Shield.Armour.ArmourClass} AC)"); }
    if (Equipment.SpellCastingFocus != null) { sb.AppendLine($"{Equipment.SpellCastingFocus.Name} (Spellcasting)"); }
    if (Equipment.TwoHand != null) { sb.AppendLine($"{Equipment.TwoHand.Name} (+{Model.GetAttackBonus(Equipment.TwoHand)} / {Model.GetDamageString(Equipment.TwoHand)})"); }
    if (Equipment.MainHand != null) { sb.AppendLine($"{Equipment.MainHand.Name} (+{Model.GetAttackBonus(Equipment.MainHand)} / {Model.GetDamageString(Equipment.MainHand)})"); }
    if (Equipment.OffHand != null) { sb.AppendLine($"{Equipment.OffHand.Name} (+{Model.GetAttackBonus(Equipment.OffHand)} / {Model.GetDamageString(Equipment.OffHand, true)})"); }
    if (Equipment.AttunedItems.Any())
    {
        foreach (ItemModel ai in Equipment.AttunedItems)
        {
            sb.AppendLine($"{ai.Name} (Attuned)");
        }
    }
}

<style>
    #character-equipment .stat-card-content textarea {
        text-align: left;
    }
</style>

<div id="character-equipment" class="card stat-card">
    <div class="stat-card-label">EQUIPMENT SUMMARY</div>
    <div class="card-body">
        <div class="stat-card-content">
            <textarea class="readonly-textarea" readonly="readonly" rows="9">@sb.ToString()</textarea>
        </div>
    </div>
</div>