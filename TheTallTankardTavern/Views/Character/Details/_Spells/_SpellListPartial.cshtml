@model TheTallTankardTavern.Models.CharacterModel
@addTagHelper *, TheTallTankardTavern

@{ 
    IEnumerable<SpellModel> CharacterSpells = SpellDataContext.Where(spell => Model.Spells.Contains(spell.ID))
        .OrderBy(s => s.Level).ThenBy(s => s.Name);
}

<div>KNOWN SPELLS</div>
<table id="character-spells-list" table-hover="true">
    <thead>
        <tr>
            <th>Name</th>
            <th>School</th>
            <th>Level</th>
            <th>Range</th>
            <th>Comps</th>
            <th>Duration</th>
            <th>Cast Time</th>
            <th>Note</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(SpellModel Spell in CharacterSpells)
        {
        <tr data-toggle="modal" data-target="#popup-modal" data-title="@Spell.Name" data-desc="@Spell.Desc" data-higher-level="@Spell.Higher_Level_Desc">
            <td>@Spell.Name</td>
            <td>@Spell.School</td>
            <td>@Spell.Level</td>
            <td>@Spell.Range</td>
            <td>@(Spell.Verbal_Components ? "V" : " ")@(Spell.Somatic_Components ? "S" : " ")<span class="@(Spell.HasMaterialCost ? "material-cost" : "")">@(Spell.Material_Components ? "M" : " ")</span></td>
            <td>@Spell.Duration</td>
            <td>@Spell.Casting_Time</td>
            <td><span class="material-cost">@(Spell.Material_Cost)</span> @(Spell.Concentration ? (Spell.Ritual ? "Focus, Ritual" : "Focus") : (Spell.Ritual ? "Ritual" : ""))</td>
            <td><button class="td-action-btn" value="Forget" onclick="removeSpell('@Model.ID', '@Spell.ID', this)"></button></td>
        </tr>
        }
    </tbody>
</table>