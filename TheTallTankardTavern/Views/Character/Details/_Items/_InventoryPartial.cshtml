@model TheTallTankardTavern.Models.CharacterModel
@addTagHelper *, TheTallTankardTavern
@using TTT.Items

<style>
    #character-items-inventory input[type=button] {
        width: 100%;
    }
</style>

<div class="character-items-inventory">
    <div class="row">
        <div class="col-md-12" id="character-items-inventory-all">
            INVENTORY
            <table table-hover="true">
                <thead>
                    <tr>
                        <th><label>Name</label></th>
                        <th><label>Type</label></th>
                        <th><label>Weight</label></th>
                        <th><label>Cost</label></th>
                        <th><label>Magic</label></th>
                        <th><label>AC</label></th>
                        <th><label>Str</label></th>
                        <th><label>Noisy</label></th>
                        <th><label>Bonus</label></th>
                        <th><label>Damage</label></th>
                        <th><label>Properties</label></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (string instanceID in Model.Inventory.OrderBy(i => ItemDataContext.GetModelFromID(i.Substring(0, i.IndexOf("&"))).Name))
                    {
                        ItemModel Item = ItemDataContext.GetModelFromID(instanceID.Substring(0, instanceID.IndexOf("&")));
                    <tr data-toggle="modal" data-target="#popup-modal" data-title="@Item.Name" data-desc="@Item.PopUpText" data-traits="">
                        <td>@Item.Name</td>
                        <td>@Item.Type</td>
                        <td>@Item.Weight lbs</td>
                        <td>@Item.Cost cp</td>
                        <td>@Item.IsMagic</td>
                        <td class="@ViewHelper.Disable(!Item.Type.IsArmour)">@Item.Armour.ArmourClass</td>
                        <td class="@ViewHelper.Disable(!Item.Type.IsArmour)">@Item.Armour.StrengthRequired</td>
                        <td class="@ViewHelper.Disable(!Item.Type.IsArmour)">@Item.Armour.DisadvantageOnStealth</td>
                        <td class="@ViewHelper.Disable(!Item.Type.IsWeapon)">@Item.Weapon.Plus</td>
                        <td class="@ViewHelper.Disable(!Item.Type.IsWeapon)">@Item.Weapon.Damage.ToString()</td>
                        <td class="@ViewHelper.Disable(!Item.Type.IsWeapon)">@Item.Weapon.Properties.ToString()</td>
                        @if (Item.Type.IsArmour || Item.Type.IsWeapon || Item.Type.IsShield)
                        {
                            @if (Model.Equipment.Contains(instanceID))
                            {
                                <td>Equipped</td>
                            }
                            else
                            {
                                <td><button class="td-action-btn" value="Equip" onclick="equipItem('@Model.ID', '@instanceID')"></button></td>
                            }
                        }
                        else
                        {
                            <td></td>
                        }
                        <td><button class="td-action-btn" value="Remove" onclick="removeItemFromInventory('@Model.ID', '@instanceID')"></button></td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>