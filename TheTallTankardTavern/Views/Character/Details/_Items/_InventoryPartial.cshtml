@model TheTallTankardTavern.Models.CharacterModel
@addTagHelper *, TheTallTankardTavern
@using static TheTallTankardTavern.Configuration.Constants
@using static TheTallTankardTavern.Configuration.Constants.ITEM_TYPES
@using TTT.String
@using TTT.Items

@{
    string[] ItemTypes = ConfigurationSettings.Item_Types["item_types"];

    string ValidateInventory(ItemModel Item)
    {
        //if (Item.Item_Type.EqualsAny(ARMOUR, WEAPON))
        //{
        //    return "invalid-row";
        //}
        return "";
    }
}

<style>
    #character-items-inventory input[type=button] {
        width: 100%;
    }
</style>

<div class="character-items-inventory">
    <div>INVENTORY ITEMS <em>(Armour &amp; Weapons must be equipped, sold, or removed.  They cannot stay in your inventory)</em></div>
    <div class="nav nav-pills">
        <a class="nav-item nav-link active" data-toggle="pill" href="#character-items-inventory-all"><strong>All</strong></a>
        <a class="nav-item nav-link" data-toggle="pill" href="#character-items-inventory-armour-and-weapons"><strong>Armour &amp; Weapons</strong></a>
        <a class="nav-item nav-link" data-toggle="pill" href="#character-items-inventory-accessories"><strong>Accessories</strong></a>
        <a class="nav-item nav-link" data-toggle="pill" href="#character-items-inventory-misc"><strong>Miscellaneous</strong></a>
    </div>
    <br />
    <div class="tab-content">
        <div class="tab-pane active" id="character-items-inventory-all">
            <table table-hover="true">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Attack</th>
                        <th>Damage</th>
                        <th>AC</th>
                        <th>Weight</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (string iid in Model.Inventory.OrderBy(i => ItemDataContext.GetModelFromID(i).Name))
                    {
                        ItemModel Item = ItemDataContext.GetModelFromID(iid);
                        <tr class="@ValidateInventory(Item)" data-toggle="modal" data-target="#popup-modal" data-title="@Item.Name" data-desc="@Item.Description" data-traits="">
                            <td>@Item.Name</td>
                            <td>@Item.Type</td>
                            <td>@Item.Weapon.Plus</td>
                            <td>@Item.Weapon.Damage.ToString() + @Item.Weapon.Plus</td>
                            <td>@Item.Armour.ArmourClass</td>
                            <td>@Item.Weight</td>
                            @if (Item.Type.IsArmour)
                            {
                                <td><button class="td-action-btn" value="Equip" onclick="equipItem('@Model.ID', '@Item.ID')"></button></td>
                            }
                            else
                            {
                                <td></td>
                            }
                            <td><button class="td-action-btn" value="Remove" onclick="removeItemFromInventory('@Model.ID', '@Item.ID')"></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane" id="character-items-inventory-armour-and-weapons">
            <table table-hover="true">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Attack</th>
                        <th>Damage</th>
                        <th>AC</th>
                        <th>Weight</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (string iid in Model.Inventory.Where(i => ItemDataContext.GetModelFromID(i).Type.IsArmour)
                     .OrderBy(i => ItemDataContext.GetModelFromID(i).Name))
                    {
                        ItemModel Item = ItemDataContext.GetModelFromID(iid);
                        <tr class="invalid-row" data-toggle="modal" data-target="#popup-modal" data-title="@Item.Name" data-desc="@Item.Description" data-traits="">
                            <td>@Item.Name</td>
                            <td>@Item.Type</td>
                            <td>@Item.Weapon.Plus</td>
                            <td>@Item.Weapon.Damage.ToString() + @Item.Weapon.Plus</td>
                            <td>@Item.Armour.ArmourClass</td>
                            <td>@Item.Weight</td>
                            <td><button class="td-action-btn" value="Equip" onclick="equipItem('@Model.ID', '@Item.ID')"></button></td>
                            <td><button class="td-action-btn" value="Remove" onclick="removeItemFromInventory('@Model.ID', '@Item.ID')"></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane" id="character-items-inventory-accessories">
            <table table-hover="true">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Attack</th>
                        <th>Damage</th>
                        <th>AC</th>
                        <th>Weight</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (string iid in Model.Inventory.Where(i => !ItemDataContext.GetModelFromID(i).Type.IsArmour)
                     .OrderBy(i => ItemDataContext.GetModelFromID(i).Name))
                    {
                        ItemModel Item = ItemDataContext.GetModelFromID(iid);
                        <tr data-toggle="modal" data-target="#popup-modal" data-title="@Item.Name" data-desc="@Item.Description" data-traits="">
                            <td>@Item.Name</td>
                            <td>@Item.Type</td>
                            <td>@Item.Weapon.Plus</td>
                            <td>@Item.Weapon.Damage.ToString() + @Item.Weapon.Plus</td>
                            <td>@Item.Armour.ArmourClass</td>
                            <td>@Item.Weight</td>
                            <td><button class="td-action-btn" value="Equip" onclick="equipItem('@Model.ID', '@Item.ID')"></button></td>
                            <td><button class="td-action-btn" value="Remove" onclick="removeItemFromInventory('@Model.ID', '@Item.ID')"></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="tab-pane" id="character-items-inventory-misc">
            <table table-hover="true">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Attack</th>
                        <th>Damage</th>
                        <th>AC</th>
                        <th>Weight</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (string iid in Model.Inventory.Where(i => !ItemDataContext.GetModelFromID(i).Type.IsArmour)
                     .OrderBy(i => ItemDataContext.GetModelFromID(i).Name))
                    {
                        ItemModel Item = ItemDataContext.GetModelFromID(iid);
                        <tr data-toggle="modal" data-target="#popup-modal" data-title="@Item.Name" data-desc="@Item.Description" data-traits="">
                            <td>@Item.Name</td>
                            <td>@Item.Type</td>
                            <td>@Item.Weapon.Plus</td>
                            <td>@Item.Weapon.Damage.ToString() + @Item.Weapon.Plus</td>
                            <td>@Item.Armour.ArmourClass</td>
                            <td>@Item.Weight</td>
                            <td></td>
                            <td><button class="td-action-btn" value="Remove" onclick="removeItemFromInventory('@Model.ID', '@Item.ID')"></button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>